// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using onlinePharmacySystem.Web.Models;

#nullable disable

namespace OnlinePharmacySystem.Web.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("onlinePharmacySystem.Web.Models.Basket", b =>
                {
                    b.Property<int>("BasketID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BasketID"));

                    b.Property<DateTime>("BasketDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("BasketUserID")
                        .HasColumnType("int");

                    b.HasKey("BasketID");

                    b.HasIndex("BasketUserID");

                    b.ToTable("Baskets");
                });

            modelBuilder.Entity("onlinePharmacySystem.Web.Models.BlogPosts", b =>
                {
                    b.Property<int>("BlogPostID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BlogPostID"));

                    b.Property<string>("PostAuthorEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostAuthorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostBody")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PostDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PostDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BlogPostID");

                    b.ToTable("BlogPosts");
                });

            modelBuilder.Entity("onlinePharmacySystem.Web.Models.Brands", b =>
                {
                    b.Property<int>("BrandID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BrandID"));

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BrandID");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("onlinePharmacySystem.Web.Models.Categories", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryID"));

                    b.Property<string>("CategoryDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryID");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("onlinePharmacySystem.Web.Models.Deliveries", b =>
                {
                    b.Property<int>("DeliveryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DeliveryID"));

                    b.Property<string>("DeliveryStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DeliveryID");

                    b.ToTable("Deliveries");
                });

            modelBuilder.Entity("onlinePharmacySystem.Web.Models.FAQs", b =>
                {
                    b.Property<int>("FaqID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FaqID"));

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FaqID");

                    b.ToTable("FAQs");
                });

            modelBuilder.Entity("onlinePharmacySystem.Web.Models.OrderDetails", b =>
                {
                    b.Property<int>("OrderDetailID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderDetailID"));

                    b.Property<int?>("BasketID")
                        .HasColumnType("int");

                    b.Property<int>("OrderID")
                        .HasColumnType("int");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("TaxRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("OrderDetailID");

                    b.HasIndex("BasketID");

                    b.HasIndex("OrderID");

                    b.HasIndex("ProductID");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("onlinePharmacySystem.Web.Models.Orders", b =>
                {
                    b.Property<int>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderID"));

                    b.Property<DateTime>("OrderCreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderDeliveryID")
                        .HasColumnType("int");

                    b.Property<string>("OrderInvoiceNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderPaymentID")
                        .HasColumnType("int");

                    b.Property<int>("OrderPharmacyID")
                        .HasColumnType("int");

                    b.Property<int>("OrderUserID")
                        .HasColumnType("int");

                    b.HasKey("OrderID");

                    b.HasIndex("OrderDeliveryID");

                    b.HasIndex("OrderPaymentID");

                    b.HasIndex("OrderPharmacyID");

                    b.HasIndex("OrderUserID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("onlinePharmacySystem.Web.Models.Payments", b =>
                {
                    b.Property<int>("PaymentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentID"));

                    b.Property<string>("PaymentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PaymentID");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("onlinePharmacySystem.Web.Models.Pharmacies", b =>
                {
                    b.Property<int>("PharmacyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PharmacyID"));

                    b.Property<string>("PharmacyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PharmacyPhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PharmacyWorkingDays")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PharmacyWorkingHours")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PharmacyID");

                    b.ToTable("Pharmacies");
                });

            modelBuilder.Entity("onlinePharmacySystem.Web.Models.Prescriptions", b =>
                {
                    b.Property<int>("PrescriptionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PrescriptionID"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("PrescriptionFileURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrescriptionStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PrescriptionUserID")
                        .HasColumnType("int");

                    b.HasKey("PrescriptionID");

                    b.HasIndex("PrescriptionUserID");

                    b.ToTable("Prescriptions");
                });

            modelBuilder.Entity("onlinePharmacySystem.Web.Models.Products", b =>
                {
                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductID"));

                    b.Property<int>("ProductBrandID")
                        .HasColumnType("int");

                    b.Property<int>("ProductCategoryID")
                        .HasColumnType("int");

                    b.Property<string>("ProductDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductFAQsID")
                        .HasColumnType("int");

                    b.Property<string>("ProductImageURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductPharmaciesID")
                        .HasColumnType("int");

                    b.Property<decimal>("ProductPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductSupplierID")
                        .HasColumnType("int");

                    b.HasKey("ProductID");

                    b.HasIndex("ProductBrandID");

                    b.HasIndex("ProductCategoryID");

                    b.HasIndex("ProductFAQsID");

                    b.HasIndex("ProductPharmaciesID");

                    b.HasIndex("ProductSupplierID");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("onlinePharmacySystem.Web.Models.Roles", b =>
                {
                    b.Property<int>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleID"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleID");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("onlinePharmacySystem.Web.Models.Suppliers", b =>
                {
                    b.Property<int>("SupplierID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupplierID"));

                    b.Property<string>("SupplierAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierPhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SupplierID");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("onlinePharmacySystem.Web.Models.Users", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"));

                    b.Property<string>("UserAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UserCreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserRoleID")
                        .HasColumnType("int");

                    b.HasKey("UserID");

                    b.HasIndex("UserRoleID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("onlinePharmacySystem.Web.Models.Basket", b =>
                {
                    b.HasOne("onlinePharmacySystem.Web.Models.Users", "BasketUser")
                        .WithMany()
                        .HasForeignKey("BasketUserID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BasketUser");
                });

            modelBuilder.Entity("onlinePharmacySystem.Web.Models.OrderDetails", b =>
                {
                    b.HasOne("onlinePharmacySystem.Web.Models.Basket", null)
                        .WithMany("BasketOrderDetails")
                        .HasForeignKey("BasketID");

                    b.HasOne("onlinePharmacySystem.Web.Models.Orders", "OrderDetailOrder")
                        .WithMany()
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("onlinePharmacySystem.Web.Models.Products", "OrderDetailProduct")
                        .WithMany()
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("OrderDetailOrder");

                    b.Navigation("OrderDetailProduct");
                });

            modelBuilder.Entity("onlinePharmacySystem.Web.Models.Orders", b =>
                {
                    b.HasOne("onlinePharmacySystem.Web.Models.Deliveries", "OrderDelivery")
                        .WithMany()
                        .HasForeignKey("OrderDeliveryID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("onlinePharmacySystem.Web.Models.Payments", "OrderPayment")
                        .WithMany()
                        .HasForeignKey("OrderPaymentID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("onlinePharmacySystem.Web.Models.Pharmacies", "OrderPharmacy")
                        .WithMany()
                        .HasForeignKey("OrderPharmacyID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("onlinePharmacySystem.Web.Models.Users", "OrderUser")
                        .WithMany()
                        .HasForeignKey("OrderUserID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("OrderDelivery");

                    b.Navigation("OrderPayment");

                    b.Navigation("OrderPharmacy");

                    b.Navigation("OrderUser");
                });

            modelBuilder.Entity("onlinePharmacySystem.Web.Models.Prescriptions", b =>
                {
                    b.HasOne("onlinePharmacySystem.Web.Models.Users", "PrescriptionUser")
                        .WithMany()
                        .HasForeignKey("PrescriptionUserID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PrescriptionUser");
                });

            modelBuilder.Entity("onlinePharmacySystem.Web.Models.Products", b =>
                {
                    b.HasOne("onlinePharmacySystem.Web.Models.Brands", "ProductBrand")
                        .WithMany()
                        .HasForeignKey("ProductBrandID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("onlinePharmacySystem.Web.Models.Categories", "ProductCategory")
                        .WithMany()
                        .HasForeignKey("ProductCategoryID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("onlinePharmacySystem.Web.Models.FAQs", "ProductFAQs")
                        .WithMany()
                        .HasForeignKey("ProductFAQsID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("onlinePharmacySystem.Web.Models.Pharmacies", "ProductPharmacies")
                        .WithMany("PharmacyProducts")
                        .HasForeignKey("ProductPharmaciesID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("onlinePharmacySystem.Web.Models.Suppliers", "ProductSupplier")
                        .WithMany()
                        .HasForeignKey("ProductSupplierID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ProductBrand");

                    b.Navigation("ProductCategory");

                    b.Navigation("ProductFAQs");

                    b.Navigation("ProductPharmacies");

                    b.Navigation("ProductSupplier");
                });

            modelBuilder.Entity("onlinePharmacySystem.Web.Models.Users", b =>
                {
                    b.HasOne("onlinePharmacySystem.Web.Models.Roles", "UserRole")
                        .WithMany()
                        .HasForeignKey("UserRoleID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("UserRole");
                });

            modelBuilder.Entity("onlinePharmacySystem.Web.Models.Basket", b =>
                {
                    b.Navigation("BasketOrderDetails");
                });

            modelBuilder.Entity("onlinePharmacySystem.Web.Models.Pharmacies", b =>
                {
                    b.Navigation("PharmacyProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
